input {
  file {
    path => "/usr/share/logstash/data/access.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  grok {
    match => {
      "message" => "%{HOSTNAME:client} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATHPARAM:request}(?: HTTP[/]%{NUMBER:httpversion})?\" %{NUMBER:response}(?: %{NUMBER:bytes})?" 
    }
    remove_field => ["ident", "auth"]
    break_on_match => false
  }

  if "_grokparsefailure" in [tags] {
    grok {
      match => {
        "message" => "%{HOSTNAME:client} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATHPARAM:request}\" %{NUMBER:response}(?: %{NUMBER:bytes})?"
      }
      remove_field => ["ident", "auth"]
    }
  }

  date {
    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    target => "@timestamp"
  }

  mutate {
    convert => {
      "response" => "integer"
      "bytes" => "integer"
    }
    gsub => [
      "httpversion", "/", "."  # Заменяем HTTP/V1.0 на HTTP/1.0
    ]
    add_field => {
      "httpversion" => "1.0"  # Значение по умолчанию
    }
    remove_field => ["tags"]
  }
}

output {
  opensearch {
    hosts => ["http://opensearch-server:9200"]
    index => "apache-logs-%{+YYYY.MM.dd}"
    user => "admin"
    password => "admin"
  }
  stdout { codec => rubydebug }
}